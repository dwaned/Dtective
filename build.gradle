/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'io.qameta.allure'

allure {
    autoconfigure = false
    aspectjweaver = true
    version = '2.8.1'
    downloadLink = 'https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.8.1/allure-commandline-2.8.1.zip'
}

repositories {
    jcenter()
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'org.seleniumhq.selenium:selenium-java:3.141.59'
    compile 'org.seleniumhq.selenium:selenium-api:3.141.59'
    compile 'org.seleniumhq.selenium:selenium-remote-driver:3.141.59'
    compile 'io.cucumber:cucumber-java:4.2.6'
    compile 'io.cucumber:cucumber-junit:4.2.6'
    compile 'io.qameta.allure:allure-cucumber4-jvm:2.12.1'
    compile 'org.apache.httpcomponents:httpclient:4.5.9'
    compile 'org.slf4j:slf4j-api:1.8.0-beta4'
    compile 'org.slf4j:slf4j-simple:1.8.0-beta4'
    compile 'org.apache.logging.log4j:log4j-core:2.11.2'
    compile 'com.savoirtech.logging:slf4j-json-logger:2.0.2'
    compile 'xml-apis:xml-apis:1.0.b2'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.httpcomponents:httpmime:4.5.9'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.10.1'
    compile 'org.json:json:20180813'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'ru.yandex.qatools.ashot:ashot:1.5.4'
    compile 'org.mongodb:bson:3.10.1'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'net.lightbody.bmp:browsermob-core:2.1.5'
    compile 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    compile 'javax.activation:activation:1.1.1'
    compile 'org.glassfish.jaxb:jaxb-runtime:2.4.0-b180830.0438'
    compile 'io.appium:java-client:7.0.0'
    compile 'com.jayway.jsonpath:json-path:2.4.0'
    compile 'org.springframework:spring-context:5.1.5.RELEASE'
    compile 'org.apache.maven.plugins:maven-assembly-plugin:3.2.0'
    compileOnly 'junit:junit:4.13-beta-2'
}

sourceSets {
    main.java.srcDir "src/main/java"
    main.resources.srcDir "src/main/resources"
}


group = 'io.dtective'
version = '1.0.3'
description = 'Dtective'
sourceCompatibility = '11'

test {
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task testsJar(type: Jar) {
    archiveClassifier = 'tests'
    from(sourceSets.test.output)
}

java {
    withSourcesJar()
    withJavadocJar()
}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//            artifact(testsJar)
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

javadoc {
    options.encoding = 'UTF-8'
}

task customFatJar(type: Jar) {
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

tasks.withType(Javadoc).all { enabled = false }